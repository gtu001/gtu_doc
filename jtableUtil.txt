	public static class JTooltipTable extends JTable {
		private static final long serialVersionUID = 1L;
		private Transformer titleTooltipTransformer;

		public void setTitleTooltipTransformer(Transformer titleTooltipTransformer) {
			this.titleTooltipTransformer = titleTooltipTransformer;
		}

		public String getColumnTooltips(int index, Object headerValue) {
			if (titleTooltipTransformer != null) {
				return (String) titleTooltipTransformer.transform(Pair.of(index, headerValue));
			}
			return null;
		}

		// Implement table header tool tips.
		protected JTableHeader createDefaultTableHeader() {
			return new JTableHeader(columnModel) {
				public String getToolTipText(MouseEvent e) {
					try {
						String tip = null;
						java.awt.Point p = e.getPoint();
						int index = columnModel.getColumnIndexAtX(p.x);
						int realIndex = columnModel.getColumn(index).getModelIndex();
						Object headerValue = columnModel.getColumn(index).getHeaderValue();
						return getColumnTooltips(realIndex, headerValue);
					} catch (Throwable ex) {
						// ex.printStackTrace();
						return null;
					}
				}
			};
		}
		
		@Override
        public JToolTip createToolTip() {
            return JTooltipUtil.createToolTip(null, null, 0);
        }

        public Point getToolTipLocation(MouseEvent e) {
            return new Point(e.getPoint().x + 10, e.getPoint().y);// r.width
        }
	}
